plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // REI
    exclusiveContent {
        forRepository {
            maven {
                name = "Shedaniel's Maven"
                url = "https://maven.shedaniel.me/"
            }
        } filter {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "dev.architectury"
        }
    }
    // JEI
    exclusiveContent {
        forRepository {
            // JEI
            maven {
                name = "Jared's maven"
                url = "https://maven.blamejared.com/"
            }
        } filter {
            includeGroup "mezz.jei"
        }
    }
    // EMI & Modmenu
    exclusiveContent {
        forRepository {
            maven {
                name = "Terraformers"
                url = "https://maven.terraformersmc.com/"
            }
        }filter {
            includeGroup "dev.emi"
            includeGroup "com.terraformersmc"
        }
    }
    // Jade & Sodium
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth Maven"
                url = "https://api.modrinth.com/maven"
            }
        }filter {
            includeGroup "maven.modrinth"
        }
    }
}

// Splitting Client & main Sources
/* Might do this later if i feel like it
loom {
    splitEnvironmentSourceSets()

    mods {
        "ntm" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

 */

fabricApi {
    configureDataGeneration {
        client = true
    }
}

dependencies {
    // The important Stuff //
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Libraries required by other mods (REI) //
    modApi "dev.architectury:architectury-fabric:${project.architectury_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

    // Compatibility Tests & better Dev Environment //
    modLocalRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"                 // ModMenu
    modLocalRuntime "maven.modrinth:jade:${project.jade_version}"                           // Jade
    modLocalRuntime "maven.modrinth:sodium:${project.sodium_version}"                       // Sodium (gotta be sodium compatible after all)
    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"         // REI
    //modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}+${project.emi_mc_version}"   // EMI (there is no version for 1.21.5 yet)
    //modLocalRuntime "mezz.jei:jei-${project.jei_mc_version}-fabric:${project.jei_version}"  // JEI (there is no version for 1.21.5 yet)

    // Compile Time Stuff //
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"                          // ModMenu
    modCompileOnly "maven.modrinth:jade:${project.jade_version}"                                    // Jade
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"              // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"   // REI default Plugins
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}+${project.emi_mc_version}:api"        // EMI
    modCompileOnly "mezz.jei:jei-${project.jei_mc_version}-fabric-api:${project.jei_version}"       // JEI
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
